
functions32:     file format elf32-i386


Disassembly of section .init:

00000358 <_init>:
 358:	53                   	push   ebx
 359:	83 ec 08             	sub    esp,0x8
 35c:	e8 8f 00 00 00       	call   3f0 <__x86.get_pc_thunk.bx>
 361:	81 c3 7b 1c 00 00    	add    ebx,0x1c7b
 367:	8b 83 18 00 00 00    	mov    eax,DWORD PTR [ebx+0x18]
 36d:	85 c0                	test   eax,eax
 36f:	74 05                	je     376 <_init+0x1e>
 371:	e8 32 00 00 00       	call   3a8 <__gmon_start__@plt>
 376:	83 c4 08             	add    esp,0x8
 379:	5b                   	pop    ebx
 37a:	c3                   	ret    

Disassembly of section .plt:

00000380 <.plt>:
 380:	ff b3 04 00 00 00    	push   DWORD PTR [ebx+0x4]
 386:	ff a3 08 00 00 00    	jmp    DWORD PTR [ebx+0x8]
 38c:	00 00                	add    BYTE PTR [eax],al
	...

00000390 <__libc_start_main@plt>:
 390:	ff a3 0c 00 00 00    	jmp    DWORD PTR [ebx+0xc]
 396:	68 00 00 00 00       	push   0x0
 39b:	e9 e0 ff ff ff       	jmp    380 <.plt>

Disassembly of section .plt.got:

000003a0 <__cxa_finalize@plt>:
 3a0:	ff a3 14 00 00 00    	jmp    DWORD PTR [ebx+0x14]
 3a6:	66 90                	xchg   ax,ax

000003a8 <__gmon_start__@plt>:
 3a8:	ff a3 18 00 00 00    	jmp    DWORD PTR [ebx+0x18]
 3ae:	66 90                	xchg   ax,ax

Disassembly of section .text:

000003b0 <_start>:
 3b0:	31 ed                	xor    ebp,ebp
 3b2:	5e                   	pop    esi
 3b3:	89 e1                	mov    ecx,esp
 3b5:	83 e4 f0             	and    esp,0xfffffff0
 3b8:	50                   	push   eax
 3b9:	54                   	push   esp
 3ba:	52                   	push   edx
 3bb:	e8 22 00 00 00       	call   3e2 <_start+0x32>
 3c0:	81 c3 1c 1c 00 00    	add    ebx,0x1c1c
 3c6:	8d 83 a4 e6 ff ff    	lea    eax,[ebx-0x195c]
 3cc:	50                   	push   eax
 3cd:	8d 83 44 e6 ff ff    	lea    eax,[ebx-0x19bc]
 3d3:	50                   	push   eax
 3d4:	51                   	push   ecx
 3d5:	56                   	push   esi
 3d6:	ff b3 1c 00 00 00    	push   DWORD PTR [ebx+0x1c]
 3dc:	e8 af ff ff ff       	call   390 <__libc_start_main@plt>
 3e1:	f4                   	hlt    
 3e2:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 3e5:	c3                   	ret    
 3e6:	66 90                	xchg   ax,ax
 3e8:	66 90                	xchg   ax,ax
 3ea:	66 90                	xchg   ax,ax
 3ec:	66 90                	xchg   ax,ax
 3ee:	66 90                	xchg   ax,ax

000003f0 <__x86.get_pc_thunk.bx>:
 3f0:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 3f3:	c3                   	ret    
 3f4:	66 90                	xchg   ax,ax
 3f6:	66 90                	xchg   ax,ax
 3f8:	66 90                	xchg   ax,ax
 3fa:	66 90                	xchg   ax,ax
 3fc:	66 90                	xchg   ax,ax
 3fe:	66 90                	xchg   ax,ax

00000400 <deregister_tm_clones>:
 400:	e8 e4 00 00 00       	call   4e9 <__x86.get_pc_thunk.dx>
 405:	81 c2 d7 1b 00 00    	add    edx,0x1bd7
 40b:	8d 8a 2c 00 00 00    	lea    ecx,[edx+0x2c]
 411:	8d 82 2c 00 00 00    	lea    eax,[edx+0x2c]
 417:	39 c8                	cmp    eax,ecx
 419:	74 1d                	je     438 <deregister_tm_clones+0x38>
 41b:	8b 82 10 00 00 00    	mov    eax,DWORD PTR [edx+0x10]
 421:	85 c0                	test   eax,eax
 423:	74 13                	je     438 <deregister_tm_clones+0x38>
 425:	55                   	push   ebp
 426:	89 e5                	mov    ebp,esp
 428:	83 ec 14             	sub    esp,0x14
 42b:	51                   	push   ecx
 42c:	ff d0                	call   eax
 42e:	83 c4 10             	add    esp,0x10
 431:	c9                   	leave  
 432:	c3                   	ret    
 433:	90                   	nop
 434:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 438:	f3 c3                	repz ret 
 43a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]

00000440 <register_tm_clones>:
 440:	e8 a4 00 00 00       	call   4e9 <__x86.get_pc_thunk.dx>
 445:	81 c2 97 1b 00 00    	add    edx,0x1b97
 44b:	55                   	push   ebp
 44c:	8d 8a 2c 00 00 00    	lea    ecx,[edx+0x2c]
 452:	8d 82 2c 00 00 00    	lea    eax,[edx+0x2c]
 458:	29 c8                	sub    eax,ecx
 45a:	89 e5                	mov    ebp,esp
 45c:	53                   	push   ebx
 45d:	c1 f8 02             	sar    eax,0x2
 460:	89 c3                	mov    ebx,eax
 462:	83 ec 04             	sub    esp,0x4
 465:	c1 eb 1f             	shr    ebx,0x1f
 468:	01 d8                	add    eax,ebx
 46a:	d1 f8                	sar    eax,1
 46c:	74 14                	je     482 <register_tm_clones+0x42>
 46e:	8b 92 20 00 00 00    	mov    edx,DWORD PTR [edx+0x20]
 474:	85 d2                	test   edx,edx
 476:	74 0a                	je     482 <register_tm_clones+0x42>
 478:	83 ec 08             	sub    esp,0x8
 47b:	50                   	push   eax
 47c:	51                   	push   ecx
 47d:	ff d2                	call   edx
 47f:	83 c4 10             	add    esp,0x10
 482:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
 485:	c9                   	leave  
 486:	c3                   	ret    
 487:	89 f6                	mov    esi,esi
 489:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00000490 <__do_global_dtors_aux>:
 490:	55                   	push   ebp
 491:	89 e5                	mov    ebp,esp
 493:	53                   	push   ebx
 494:	e8 57 ff ff ff       	call   3f0 <__x86.get_pc_thunk.bx>
 499:	81 c3 43 1b 00 00    	add    ebx,0x1b43
 49f:	83 ec 04             	sub    esp,0x4
 4a2:	80 bb 2c 00 00 00 00 	cmp    BYTE PTR [ebx+0x2c],0x0
 4a9:	75 27                	jne    4d2 <__do_global_dtors_aux+0x42>
 4ab:	8b 83 14 00 00 00    	mov    eax,DWORD PTR [ebx+0x14]
 4b1:	85 c0                	test   eax,eax
 4b3:	74 11                	je     4c6 <__do_global_dtors_aux+0x36>
 4b5:	83 ec 0c             	sub    esp,0xc
 4b8:	ff b3 28 00 00 00    	push   DWORD PTR [ebx+0x28]
 4be:	e8 dd fe ff ff       	call   3a0 <__cxa_finalize@plt>
 4c3:	83 c4 10             	add    esp,0x10
 4c6:	e8 35 ff ff ff       	call   400 <deregister_tm_clones>
 4cb:	c6 83 2c 00 00 00 01 	mov    BYTE PTR [ebx+0x2c],0x1
 4d2:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
 4d5:	c9                   	leave  
 4d6:	c3                   	ret    
 4d7:	89 f6                	mov    esi,esi
 4d9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

000004e0 <frame_dummy>:
 4e0:	55                   	push   ebp
 4e1:	89 e5                	mov    ebp,esp
 4e3:	5d                   	pop    ebp
 4e4:	e9 57 ff ff ff       	jmp    440 <register_tm_clones>

000004e9 <__x86.get_pc_thunk.dx>:
 4e9:	8b 14 24             	mov    edx,DWORD PTR [esp]
 4ec:	c3                   	ret    

000004ed <fun1>:
 4ed:	55                   	push   ebp
 4ee:	89 e5                	mov    ebp,esp
 4f0:	e8 21 01 00 00       	call   616 <__x86.get_pc_thunk.ax>
 4f5:	05 e7 1a 00 00       	add    eax,0x1ae7
 4fa:	90                   	nop
 4fb:	90                   	nop
 4fc:	5d                   	pop    ebp
 4fd:	c3                   	ret    

000004fe <fun2>:
 4fe:	55                   	push   ebp
 4ff:	89 e5                	mov    ebp,esp
 501:	e8 10 01 00 00       	call   616 <__x86.get_pc_thunk.ax>
 506:	05 d6 1a 00 00       	add    eax,0x1ad6
 50b:	90                   	nop
 50c:	b8 34 12 00 00       	mov    eax,0x1234
 511:	5d                   	pop    ebp
 512:	c3                   	ret    

00000513 <fun3>:
 513:	55                   	push   ebp
 514:	89 e5                	mov    ebp,esp
 516:	e8 fb 00 00 00       	call   616 <__x86.get_pc_thunk.ax>
 51b:	05 c1 1a 00 00       	add    eax,0x1ac1
 520:	90                   	nop
 521:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 524:	83 c0 01             	add    eax,0x1
 527:	5d                   	pop    ebp
 528:	c3                   	ret    

00000529 <fun4>:
 529:	55                   	push   ebp
 52a:	89 e5                	mov    ebp,esp
 52c:	e8 e5 00 00 00       	call   616 <__x86.get_pc_thunk.ax>
 531:	05 ab 1a 00 00       	add    eax,0x1aab
 536:	90                   	nop
 537:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
 53a:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
 53d:	01 d0                	add    eax,edx
 53f:	5d                   	pop    ebp
 540:	c3                   	ret    

00000541 <fun5>:
 541:	55                   	push   ebp
 542:	89 e5                	mov    ebp,esp
 544:	e8 cd 00 00 00       	call   616 <__x86.get_pc_thunk.ax>
 549:	05 93 1a 00 00       	add    eax,0x1a93
 54e:	90                   	nop
 54f:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
 552:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
 555:	01 c2                	add    edx,eax
 557:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
 55a:	01 c2                	add    edx,eax
 55c:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
 55f:	01 c2                	add    edx,eax
 561:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
 564:	01 c2                	add    edx,eax
 566:	8b 45 1c             	mov    eax,DWORD PTR [ebp+0x1c]
 569:	01 c2                	add    edx,eax
 56b:	8b 45 20             	mov    eax,DWORD PTR [ebp+0x20]
 56e:	01 c2                	add    edx,eax
 570:	8b 45 24             	mov    eax,DWORD PTR [ebp+0x24]
 573:	01 c2                	add    edx,eax
 575:	8b 45 28             	mov    eax,DWORD PTR [ebp+0x28]
 578:	01 c2                	add    edx,eax
 57a:	8b 45 2c             	mov    eax,DWORD PTR [ebp+0x2c]
 57d:	01 c2                	add    edx,eax
 57f:	8b 45 30             	mov    eax,DWORD PTR [ebp+0x30]
 582:	01 c2                	add    edx,eax
 584:	8b 45 34             	mov    eax,DWORD PTR [ebp+0x34]
 587:	01 c2                	add    edx,eax
 589:	8b 45 38             	mov    eax,DWORD PTR [ebp+0x38]
 58c:	01 c2                	add    edx,eax
 58e:	8b 45 3c             	mov    eax,DWORD PTR [ebp+0x3c]
 591:	01 c2                	add    edx,eax
 593:	8b 45 40             	mov    eax,DWORD PTR [ebp+0x40]
 596:	01 c2                	add    edx,eax
 598:	8b 45 44             	mov    eax,DWORD PTR [ebp+0x44]
 59b:	01 d0                	add    eax,edx
 59d:	5d                   	pop    ebp
 59e:	c3                   	ret    

0000059f <main>:
 59f:	55                   	push   ebp
 5a0:	89 e5                	mov    ebp,esp
 5a2:	83 ec 10             	sub    esp,0x10
 5a5:	e8 6c 00 00 00       	call   616 <__x86.get_pc_thunk.ax>
 5aa:	05 32 1a 00 00       	add    eax,0x1a32
 5af:	90                   	nop
 5b0:	e8 38 ff ff ff       	call   4ed <fun1>
 5b5:	90                   	nop
 5b6:	e8 43 ff ff ff       	call   4fe <fun2>
 5bb:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
 5be:	90                   	nop
 5bf:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
 5c2:	50                   	push   eax
 5c3:	e8 4b ff ff ff       	call   513 <fun3>
 5c8:	83 c4 04             	add    esp,0x4
 5cb:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
 5ce:	90                   	nop
 5cf:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
 5d2:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
 5d5:	52                   	push   edx
 5d6:	50                   	push   eax
 5d7:	e8 4d ff ff ff       	call   529 <fun4>
 5dc:	83 c4 08             	add    esp,0x8
 5df:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
 5e2:	90                   	nop
 5e3:	6a 0f                	push   0xf
 5e5:	6a 0e                	push   0xe
 5e7:	6a 0d                	push   0xd
 5e9:	6a 0c                	push   0xc
 5eb:	6a 0b                	push   0xb
 5ed:	6a 0a                	push   0xa
 5ef:	6a 09                	push   0x9
 5f1:	6a 08                	push   0x8
 5f3:	6a 07                	push   0x7
 5f5:	6a 06                	push   0x6
 5f7:	6a 05                	push   0x5
 5f9:	6a 04                	push   0x4
 5fb:	6a 03                	push   0x3
 5fd:	6a 02                	push   0x2
 5ff:	6a 01                	push   0x1
 601:	6a 00                	push   0x0
 603:	e8 39 ff ff ff       	call   541 <fun5>
 608:	83 c4 40             	add    esp,0x40
 60b:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
 60e:	90                   	nop
 60f:	b8 00 00 00 00       	mov    eax,0x0
 614:	c9                   	leave  
 615:	c3                   	ret    

00000616 <__x86.get_pc_thunk.ax>:
 616:	8b 04 24             	mov    eax,DWORD PTR [esp]
 619:	c3                   	ret    
 61a:	66 90                	xchg   ax,ax
 61c:	66 90                	xchg   ax,ax
 61e:	66 90                	xchg   ax,ax

00000620 <__libc_csu_init>:
 620:	55                   	push   ebp
 621:	57                   	push   edi
 622:	56                   	push   esi
 623:	53                   	push   ebx
 624:	e8 c7 fd ff ff       	call   3f0 <__x86.get_pc_thunk.bx>
 629:	81 c3 b3 19 00 00    	add    ebx,0x19b3
 62f:	83 ec 0c             	sub    esp,0xc
 632:	8b 6c 24 28          	mov    ebp,DWORD PTR [esp+0x28]
 636:	8d b3 04 ff ff ff    	lea    esi,[ebx-0xfc]
 63c:	e8 17 fd ff ff       	call   358 <_init>
 641:	8d 83 00 ff ff ff    	lea    eax,[ebx-0x100]
 647:	29 c6                	sub    esi,eax
 649:	c1 fe 02             	sar    esi,0x2
 64c:	85 f6                	test   esi,esi
 64e:	74 25                	je     675 <__libc_csu_init+0x55>
 650:	31 ff                	xor    edi,edi
 652:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 658:	83 ec 04             	sub    esp,0x4
 65b:	55                   	push   ebp
 65c:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 660:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 664:	ff 94 bb 00 ff ff ff 	call   DWORD PTR [ebx+edi*4-0x100]
 66b:	83 c7 01             	add    edi,0x1
 66e:	83 c4 10             	add    esp,0x10
 671:	39 fe                	cmp    esi,edi
 673:	75 e3                	jne    658 <__libc_csu_init+0x38>
 675:	83 c4 0c             	add    esp,0xc
 678:	5b                   	pop    ebx
 679:	5e                   	pop    esi
 67a:	5f                   	pop    edi
 67b:	5d                   	pop    ebp
 67c:	c3                   	ret    
 67d:	8d 76 00             	lea    esi,[esi+0x0]

00000680 <__libc_csu_fini>:
 680:	f3 c3                	repz ret 

Disassembly of section .fini:

00000684 <_fini>:
 684:	53                   	push   ebx
 685:	83 ec 08             	sub    esp,0x8
 688:	e8 63 fd ff ff       	call   3f0 <__x86.get_pc_thunk.bx>
 68d:	81 c3 4f 19 00 00    	add    ebx,0x194f
 693:	83 c4 08             	add    esp,0x8
 696:	5b                   	pop    ebx
 697:	c3                   	ret    
